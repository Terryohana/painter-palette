{"version":3,"sources":["images/logo.png","components/ColorBox/ColorBox.js","components/NavBar/NavBar.js","components/Palette/Palette.js","seedColorPalettes.js","helpers/generatePalette.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ColorBox","props","state","showCopyOverlay","showOverlay","bind","this","setState","setTimeout","backgroundColor","colorName","text","onCopy","style","background","className","Component","NavBar","colorFormat","handleColorFormatChange","evt","target","value","changeColorFormat","colorLevel","changeColorLevel","src","logo","alt","href","defaultValue","min","max","step","onAfterChange","Select","onChange","MenuItem","Palette","newColorLevel","val","palette","colorBoxes","colors","map","color","key","id","name","paletteName","emoji","colorLevels","generatePalette","input","newPalette","level","hexInput","hexColor","numColors","scale","chroma","darken","hex","mode","reverse","i","push","toLowerCase","replace","rgb","css","rgba","App","seedColorPalettes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8dd84f61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ecea6c3a.png\";","import React, { Component } from \"react\";\r\nimport \"./ColorBox.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nclass ColorBox extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowCopyOverlay: false,\r\n\t\t};\r\n\t\tthis.showOverlay = this.showOverlay.bind(this);\r\n\t}\r\n\t// Show overlay when a color box has been clicked on\r\n\t//   - Set the state to show the overlay\r\n\tshowOverlay() {\r\n\t\tthis.setState({ showCopyOverlay: true });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ showCopyOverlay: false });\r\n\t\t}, 1000);\r\n\t}\r\n\trender() {\r\n\t\tlet { backgroundColor, colorName } = this.props;\r\n\t\tlet { showCopyOverlay } = this.state;\r\n\t\treturn (\r\n\t\t\t<CopyToClipboard text={backgroundColor} onCopy={this.showOverlay}>\r\n\t\t\t\t<div style={{ background: backgroundColor }} className=\"ColorBox\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{ background: backgroundColor }}\r\n\t\t\t\t\t\tclassName={`ColorBox-copy-overlay ${showCopyOverlay && \"show\"}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={`ColorBox-copy-overlay-content ${showCopyOverlay && \"show\"}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h1>Copied!</h1>\r\n\t\t\t\t\t\t<p>{backgroundColor}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"ColorBox-copy-container\">\r\n\t\t\t\t\t\t<button className=\"ColorBox-copy-button\">Copy</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"ColorBox-description\">\r\n\t\t\t\t\t\t<span>{colorName}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"ColorBox-more-btn\">More</span>\r\n\t\t\t\t</div>\r\n\t\t\t</CopyToClipboard>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ColorBox;\r\n","import React, { Component } from \"react\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\n\r\nimport Slider from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"./NavBar.css\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            colorFormat: 'hex'\r\n        };\r\n        this.handleColorFormatChange = this.handleColorFormatChange.bind(this)\r\n    }\r\n    handleColorFormatChange(evt){\r\n        this.setState({ colorFormat : evt.target.value  });\r\n        this.props.changeColorFormat(evt.target.value)\r\n    }\r\n\trender() {\r\n\t\tlet { colorLevel, changeColorLevel } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"NavBar\">\r\n\t\t\t\t<div className=\"NavBar-logo\">\r\n\t\t\t\t\t<img src={logo} alt=\"painter palette logo\" />\r\n\t\t\t\t\t<a href=\"#\">painter palette</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"NavBar-slider-container\">\r\n\t\t\t\t\t<span className=\"NavBar-slider-textVal\">Level: {colorLevel}</span>\r\n\t\t\t\t\t<div className=\"NavBar-palette-slider\">\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tdefaultValue={colorLevel}\r\n\t\t\t\t\t\t\tmin={100}\r\n\t\t\t\t\t\t\tmax={900}\r\n\t\t\t\t\t\t\tstep={100}\r\n\t\t\t\t\t\t\tonAfterChange={changeColorLevel}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"NavBar-select-container\">\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tvalue={this.state.colorFormat}\r\n\t\t\t\t\t\tonChange={this.handleColorFormatChange}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuItem value=\"hex\">HEX - #ffff</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value=\"rgb\">RGB - rgb(255, 255, 255)</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value=\"rgba\">RGBA - rgba(255, 255, 255, 0.2)</MenuItem>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport ColorBox from \"../ColorBox/ColorBox\";\r\nimport \"./Palette.css\";\r\nimport Navbar from \"../NavBar/NavBar\";\r\nclass Palette extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            colorLevel: 500,\r\n            colorFormat: 'hex'\r\n\t\t};\r\n\t\tthis.changeColorLevel = this.changeColorLevel.bind(this);\r\n\t\tthis.changeColorFormat = this.changeColorFormat.bind(this);\r\n\t}\r\n\tchangeColorLevel(newColorLevel) {\r\n\t\tthis.setState({ colorLevel: newColorLevel });\r\n\t}\r\n\tchangeColorFormat(val) {\r\n\t\tthis.setState({ colorFormat : val  });\r\n\t}\r\n\trender() {\r\n        let {palette} = this.props\r\n        let {colorLevel, colorFormat} = this.state\r\n        //Map over colors and create a box corresponding to that color\r\n        \r\n\t\tconst colorBoxes = palette.colors[colorLevel].map((color) => (\r\n\t\t\t<ColorBox key={color.id} backgroundColor={color[colorFormat]} colorName={color.name} />\r\n        ));\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Palette\">\r\n\t\t\t\t<Navbar\r\n\t\t\t\t\tchangeColorLevel={this.changeColorLevel}\r\n\t\t\t\t\tchangeColorFormat={this.changeColorFormat}\r\n\t\t\t\t\tcolorLevel={this.state.colorLevel}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"Palette-colors\">{colorBoxes}</div>\r\n\t\t\t\t{/* Footer will go here */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Palette;\r\n","export default [\r\n    {\r\n      paletteName: \"Material UI Colors\",\r\n      id: \"material-ui-colors\",\r\n      emoji: \"🎨\",\r\n      colors: [\r\n        { name: \"red\", color: \"#F44336\" },\r\n        { name: \"pink\", color: \"#E91E63\" },\r\n        { name: \"purple\", color: \"#9C27B0\" },\r\n        { name: \"deeppurple\", color: \"#673AB7\" },\r\n        { name: \"indigo\", color: \"#3F51B5\" },\r\n        { name: \"blue\", color: \"#2196F3\" },\r\n        { name: \"lightblue\", color: \"#03A9F4\" },\r\n        { name: \"cyan\", color: \"#00BCD4\" },\r\n        { name: \"teal\", color: \"#009688\" },\r\n        { name: \"green\", color: \"#4CAF50\" },\r\n        { name: \"lightgreen\", color: \"#8BC34A\" },\r\n        { name: \"lime\", color: \"#CDDC39\" },\r\n        { name: \"yellow\", color: \"#FFEB3B\" },\r\n        { name: \"amber\", color: \"#FFC107\" },\r\n        { name: \"orange\", color: \"#FF9800\" },\r\n        { name: \"deeporange\", color: \"#FF5722\" },\r\n        { name: \"brown\", color: \"#795548\" },\r\n        { name: \"grey\", color: \"#9E9E9E\" },\r\n        { name: \"bluegrey\", color: \"#607D8B\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors v1\",\r\n      id: \"flat-ui-colors-v1\",\r\n      emoji: \"🤙\",\r\n      colors: [\r\n        { name: \"Turquoise\", color: \"#1abc9c\" },\r\n        { name: \"Emerald\", color: \"#2ecc71\" },\r\n        { name: \"PeterRiver\", color: \"#3498db\" },\r\n        { name: \"Amethyst\", color: \"#9b59b6\" },\r\n        { name: \"WetAsphalt\", color: \"#34495e\" },\r\n        { name: \"GreenSea\", color: \"#16a085\" },\r\n        { name: \"Nephritis\", color: \"#27ae60\" },\r\n        { name: \"BelizeHole\", color: \"#2980b9\" },\r\n        { name: \"Wisteria\", color: \"#8e44ad\" },\r\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n        { name: \"SunFlower\", color: \"#f1c40f\" },\r\n        { name: \"Carrot\", color: \"#e67e22\" },\r\n        { name: \"Alizarin\", color: \"#e74c3c\" },\r\n        { name: \"Clouds\", color: \"#ecf0f1\" },\r\n        { name: \"Concrete\", color: \"#95a5a6\" },\r\n        { name: \"Orange\", color: \"#f39c12\" },\r\n        { name: \"Pumpkin\", color: \"#d35400\" },\r\n        { name: \"Pomegranate\", color: \"#c0392b\" },\r\n        { name: \"Silver\", color: \"#bdc3c7\" },\r\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Dutch\",\r\n      id: \"flat-ui-colors-dutch\",\r\n      emoji: \"🇳🇱\",\r\n      colors: [\r\n        { name: \"Sunflower\", color: \"#FFC312\" },\r\n        { name: \"Energos\", color: \"#C4E538\" },\r\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n        { name: \"BaraRose\", color: \"#ED4C67\" },\r\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n        { name: \"LavenderTea\", color: \"#D980FA\" },\r\n        { name: \"VerryBerry\", color: \"#B53471\" },\r\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n        { name: \"PixelatedGrass\", color: \"#009432\" },\r\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n        { name: \"HollyHock\", color: \"#833471\" },\r\n        { name: \"RedPigment\", color: \"#EA2027\" },\r\n        { name: \"TurkishAqua\", color: \"#006266\" },\r\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors American\",\r\n      id: \"flat-ui-colors-american\",\r\n      emoji: \"🇺🇸\",\r\n      colors: [\r\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n        { name: \"FadedPoster\", color: \"#81ecec\" },\r\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n        { name: \"CityLights\", color: \"#dfe6e9\" },\r\n        { name: \"MintLeaf\", color: \"#00b894\" },\r\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n        { name: \"FirstDate\", color: \"#fab1a0\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n        { name: \"AmericanRiver\", color: \"#636e72\" },\r\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n        { name: \"OrangeVille\", color: \"#e17055\" },\r\n        { name: \"Chi-Gong\", color: \"#d63031\" },\r\n        { name: \"PrunusAvium\", color: \"#e84393\" },\r\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Aussie\",\r\n      id: \"flat-ui-colors-aussie\",\r\n      emoji: \"🇦🇺\",\r\n      colors: [\r\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n        { name: \"JuneBud\", color: \"#badc58\" },\r\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n        { name: \"Turbo\", color: \"#f9ca24\" },\r\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n        { name: \"PureApple\", color: \"#6ab04c\" },\r\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n        { name: \"Heliotrope\", color: \"#e056fd\" },\r\n        { name: \"ExodusFruit\", color: \"#686de0\" },\r\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n        { name: \"SteelPink\", color: \"#be2edd\" },\r\n        { name: \"Blurple\", color: \"#4834d4\" },\r\n        { name: \"DeepCove\", color: \"#130f40\" },\r\n        { name: \"WizardGrey\", color: \"#535c68\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors British\",\r\n      id: \"flat-ui-colors-british\",\r\n      emoji: \"🇬🇧\",\r\n      colors: [\r\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n        { name: \"Seabrook\", color: \"#487eb0\" },\r\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n        { name: \"Naval\", color: \"#40739e\" },\r\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n        { name: \"MazarineBlue\", color: \"#273c75\" },\r\n        { name: \"BlueNights\", color: \"#353b48\" },\r\n        { name: \"HarleyOrange\", color: \"#c23616\" },\r\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n        { name: \"ChainGangGrey\", color: \"#718093\" },\r\n        { name: \"PicoVoid\", color: \"#192a56\" },\r\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Spanish\",\r\n      id: \"flat-ui-colors-spanish\",\r\n      emoji: \"🇪🇸\",\r\n      colors: [\r\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n        { name: \"C64Purple\", color: \"#706fd3\" },\r\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n        { name: \"SummerSky\", color: \"#34ace0\" },\r\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n        { name: \"Liberty\", color: \"#474787\" },\r\n        { name: \"HotStone\", color: \"#aaa69d\" },\r\n        { name: \"DevilBlue\", color: \"#227093\" },\r\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n        { name: \"ChileanFire\", color: \"#cd6133\" },\r\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n        { name: \"Desert\", color: \"#ccae62\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Indian\",\r\n      id: \"flat-ui-colors-indian\",\r\n      emoji: \"🇮🇳\",\r\n      colors: [\r\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n        { name: \"RichGardenia\", color: \"#F97F51\" },\r\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n        { name: \"Keppel\", color: \"#58B19F\" },\r\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n        { name: \"BlueBell\", color: \"#3B3B98\" },\r\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n        { name: \"OasisStream\", color: \"#9AECDB\" },\r\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n        { name: \"PineGlade\", color: \"#BDC581\" },\r\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors French\",\r\n      id: \"flat-ui-colors-french\",\r\n      emoji: \"🇫🇷\",\r\n      colors: [\r\n        { name: \"FlatFlesh\", color: \"#fad390\" },\r\n        { name: \"MelonMelody\", color: \"#f8c291\" },\r\n        { name: \"Livid\", color: \"#6a89cc\" },\r\n        { name: \"Spray\", color: \"#82ccdd\" },\r\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n        { name: \"MandarinRed\", color: \"#e55039\" },\r\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n        { name: \"Dupain\", color: \"#60a3bc\" },\r\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n        { name: \"Waterfall\", color: \"#38ada9\" },\r\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n        { name: \"JalapenoRed\", color: \"#b71540\" },\r\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n        { name: \"ReefEncounter\", color: \"#079992\" }\r\n      ]\r\n    }\r\n  ];","// Chroma.js is a small-ish zero-dependency JavaScript library for all kinds of color conversions and color scales.\r\n//\r\n// The premise of these helper functions is given a defined palette color theme, we can create and manipulate\r\n// those colors to dynamically alter the color across all levels (ie font-weight: 500 || 600 ||..etc)\r\n//\r\n//\t- Creates a new palette object that changes...\r\n//\t\t-  colors array -> colors object that changes...\r\n//\t\t\t- name -> name and font-weight (ie. red 500)\r\n//\t\t\t- adds -> new hex color code\r\n//\t\t\t- adds -> rgb color code \r\n//\t\t\t- adds -> rgba color code \r\n\r\nimport chroma from \"chroma-js\";\r\nconst colorLevels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(input) {\r\n\tlet newPalette = {\r\n\t\tpaletteName: input.paletteName,\r\n\t\tid: input.id,\r\n\t\temoji: input.emoji,\r\n\t\tcolors: {},\r\n\t};\r\n\t//Create an array for each of the color levels so we can push the generated color scales\r\n\t//into its corresponding color level\r\n\tfor (let level of colorLevels) {\r\n\t\tnewPalette.colors[level] = [];\r\n\t}\r\n\t// Loop over the colors within the palette\r\n\tfor (let color of input.colors) {\r\n\t\t//Create a scale for each color inside the palette\r\n\t\t//  - We reverse it so its light -> dark\r\n\t\tlet scale = generateScale(color.color, 10).reverse();\r\n\r\n\t\t// Loop over the scale and push that color into the corresponding colorLevel\r\n\t\tfor (let i in scale) {\r\n\t\t\tnewPalette.colors[colorLevels[i]].push({\r\n\t\t\t\tname: `${color.name} ${colorLevels[i]}`,\r\n\t\t\t\tid: color.name.toLowerCase().replace(/ /g, \"-\"),\r\n\t\t\t\thex: scale[i],\r\n\t\t\t\trgb: chroma(scale[i]).css(),\r\n\t\t\t\trgba: chroma(scale[i])\r\n\t\t\t\t\t.css()\r\n\t\t\t\t\t.replace(\"rgb\", \"rgba\")\r\n\t\t\t\t\t.replace(\")\", \",1.0)\"), // Need to change rgb to rgba and add the alpha value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn newPalette;\r\n}\r\n// Takes a hex color and creates a color range using the chroma.js package\r\n//  - We darken the original color for one side of scale and use white as\r\n//    the other side of the scale\r\nfunction getRange(hexInput) {\r\n\tconst end = \"#fff\";\r\n\treturn [chroma(hexInput).darken(1.4).hex(), hexInput, end];\r\n}\r\n// Creates a scale with the inputted hexColor and number of colors to generate\r\n// the scale for the given range provided\r\n//  -\"lab\" stands for 'lightness a b' and .colors takes the scale and spits out 10 colors\r\nfunction generateScale(hexColor, numColors) {\r\n\treturn chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numColors);\r\n}\r\n\r\nexport { generatePalette };\r\n","import React from 'react';\nimport './App.css';\nimport Palette from './components/Palette/Palette';\nimport seedColorPalettes from './seedColorPalettes'\nimport {generatePalette} from './helpers/generatePalette'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Palette palette={generatePalette(seedColorPalettes[0])}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}