{"version":3,"sources":["components/ColorBox/ColorBox.js","components/Palette/Palette.js","seedColorPalettes.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","props","state","showCopyOverlay","showOverlay","bind","this","setState","setTimeout","backgroundColor","colorName","text","onCopy","style","background","className","Component","Palette","colorBoxes","colors","map","palette","color","name","paletteName","id","emoji","App","seedColorPalettes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ea58fcf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./ColorBox.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nclass ColorBox extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowCopyOverlay: false,\r\n\t\t};\r\n\t\tthis.showOverlay = this.showOverlay.bind(this);\r\n\t}\r\n\t// Show overlay when a color box has been clicked on\r\n\t//   - Set the state to show the overlay\r\n\tshowOverlay() {\r\n\t\tthis.setState({ showCopyOverlay: true });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ showCopyOverlay: false });\r\n\t\t}, 1000);\r\n\t}\r\n\trender() {\r\n\t\tlet { backgroundColor, colorName } = this.props;\r\n\t\tlet { showCopyOverlay } = this.state;\r\n\t\treturn (\r\n\t\t\t<CopyToClipboard text={backgroundColor} onCopy={this.showOverlay}>\r\n\t\t\t\t<div style={{ background: backgroundColor }} className=\"ColorBox\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{ background: backgroundColor }}\r\n\t\t\t\t\t\tclassName={`ColorBox-copy-overlay ${showCopyOverlay && \"show\"}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={`ColorBox-copy-overlay-content ${showCopyOverlay && \"show\"}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h1>Copied!</h1>\r\n\t\t\t\t\t\t<p>{backgroundColor}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"ColorBox-copy-container\">\r\n\t\t\t\t\t\t<button className=\"ColorBox-copy-button\">Copy</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"ColorBox-description\">\r\n\t\t\t\t\t\t<span>{colorName}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"ColorBox-more-btn\">More</span>\r\n\t\t\t\t</div>\r\n\t\t\t</CopyToClipboard>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ColorBox;\r\n","import React, { Component } from 'react';\r\nimport ColorBox from '../ColorBox/ColorBox'\r\nimport './Palette.css'\r\n\r\nclass Palette extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        //Map over colors and create a box corresponding to that color\r\n        const colorBoxes = this.props.colors.map(palette => (\r\n            <ColorBox backgroundColor={palette.color} colorName={palette.name}/>\r\n        ))\r\n        return ( \r\n            <div className=\"Palette\">\r\n                {/* Navbar will go here */}\r\n                <div className=\"Palette-colors\">\r\n                    {colorBoxes}\r\n                </div>\r\n                {/* Footer will go here */}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Palette;","export default [\r\n    {\r\n      paletteName: \"Material UI Colors\",\r\n      id: \"material-ui-colors\",\r\n      emoji: \"🎨\",\r\n      colors: [\r\n        { name: \"red\", color: \"#F44336\" },\r\n        { name: \"pink\", color: \"#E91E63\" },\r\n        { name: \"purple\", color: \"#9C27B0\" },\r\n        { name: \"deeppurple\", color: \"#673AB7\" },\r\n        { name: \"indigo\", color: \"#3F51B5\" },\r\n        { name: \"blue\", color: \"#2196F3\" },\r\n        { name: \"lightblue\", color: \"#03A9F4\" },\r\n        { name: \"cyan\", color: \"#00BCD4\" },\r\n        { name: \"teal\", color: \"#009688\" },\r\n        { name: \"green\", color: \"#4CAF50\" },\r\n        { name: \"lightgreen\", color: \"#8BC34A\" },\r\n        { name: \"lime\", color: \"#CDDC39\" },\r\n        { name: \"yellow\", color: \"#FFEB3B\" },\r\n        { name: \"amber\", color: \"#FFC107\" },\r\n        { name: \"orange\", color: \"#FF9800\" },\r\n        { name: \"deeporange\", color: \"#FF5722\" },\r\n        { name: \"brown\", color: \"#795548\" },\r\n        { name: \"grey\", color: \"#9E9E9E\" },\r\n        { name: \"bluegrey\", color: \"#607D8B\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors v1\",\r\n      id: \"flat-ui-colors-v1\",\r\n      emoji: \"🤙\",\r\n      colors: [\r\n        { name: \"Turquoise\", color: \"#1abc9c\" },\r\n        { name: \"Emerald\", color: \"#2ecc71\" },\r\n        { name: \"PeterRiver\", color: \"#3498db\" },\r\n        { name: \"Amethyst\", color: \"#9b59b6\" },\r\n        { name: \"WetAsphalt\", color: \"#34495e\" },\r\n        { name: \"GreenSea\", color: \"#16a085\" },\r\n        { name: \"Nephritis\", color: \"#27ae60\" },\r\n        { name: \"BelizeHole\", color: \"#2980b9\" },\r\n        { name: \"Wisteria\", color: \"#8e44ad\" },\r\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n        { name: \"SunFlower\", color: \"#f1c40f\" },\r\n        { name: \"Carrot\", color: \"#e67e22\" },\r\n        { name: \"Alizarin\", color: \"#e74c3c\" },\r\n        { name: \"Clouds\", color: \"#ecf0f1\" },\r\n        { name: \"Concrete\", color: \"#95a5a6\" },\r\n        { name: \"Orange\", color: \"#f39c12\" },\r\n        { name: \"Pumpkin\", color: \"#d35400\" },\r\n        { name: \"Pomegranate\", color: \"#c0392b\" },\r\n        { name: \"Silver\", color: \"#bdc3c7\" },\r\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Dutch\",\r\n      id: \"flat-ui-colors-dutch\",\r\n      emoji: \"🇳🇱\",\r\n      colors: [\r\n        { name: \"Sunflower\", color: \"#FFC312\" },\r\n        { name: \"Energos\", color: \"#C4E538\" },\r\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n        { name: \"BaraRose\", color: \"#ED4C67\" },\r\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n        { name: \"LavenderTea\", color: \"#D980FA\" },\r\n        { name: \"VerryBerry\", color: \"#B53471\" },\r\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n        { name: \"PixelatedGrass\", color: \"#009432\" },\r\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n        { name: \"HollyHock\", color: \"#833471\" },\r\n        { name: \"RedPigment\", color: \"#EA2027\" },\r\n        { name: \"TurkishAqua\", color: \"#006266\" },\r\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors American\",\r\n      id: \"flat-ui-colors-american\",\r\n      emoji: \"🇺🇸\",\r\n      colors: [\r\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n        { name: \"FadedPoster\", color: \"#81ecec\" },\r\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n        { name: \"CityLights\", color: \"#dfe6e9\" },\r\n        { name: \"MintLeaf\", color: \"#00b894\" },\r\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n        { name: \"FirstDate\", color: \"#fab1a0\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n        { name: \"AmericanRiver\", color: \"#636e72\" },\r\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n        { name: \"OrangeVille\", color: \"#e17055\" },\r\n        { name: \"Chi-Gong\", color: \"#d63031\" },\r\n        { name: \"PrunusAvium\", color: \"#e84393\" },\r\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Aussie\",\r\n      id: \"flat-ui-colors-aussie\",\r\n      emoji: \"🇦🇺\",\r\n      colors: [\r\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n        { name: \"JuneBud\", color: \"#badc58\" },\r\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n        { name: \"Turbo\", color: \"#f9ca24\" },\r\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n        { name: \"PureApple\", color: \"#6ab04c\" },\r\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n        { name: \"Heliotrope\", color: \"#e056fd\" },\r\n        { name: \"ExodusFruit\", color: \"#686de0\" },\r\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n        { name: \"SteelPink\", color: \"#be2edd\" },\r\n        { name: \"Blurple\", color: \"#4834d4\" },\r\n        { name: \"DeepCove\", color: \"#130f40\" },\r\n        { name: \"WizardGrey\", color: \"#535c68\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors British\",\r\n      id: \"flat-ui-colors-british\",\r\n      emoji: \"🇬🇧\",\r\n      colors: [\r\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n        { name: \"Seabrook\", color: \"#487eb0\" },\r\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n        { name: \"Naval\", color: \"#40739e\" },\r\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n        { name: \"MazarineBlue\", color: \"#273c75\" },\r\n        { name: \"BlueNights\", color: \"#353b48\" },\r\n        { name: \"HarleyOrange\", color: \"#c23616\" },\r\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n        { name: \"ChainGangGrey\", color: \"#718093\" },\r\n        { name: \"PicoVoid\", color: \"#192a56\" },\r\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Spanish\",\r\n      id: \"flat-ui-colors-spanish\",\r\n      emoji: \"🇪🇸\",\r\n      colors: [\r\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n        { name: \"C64Purple\", color: \"#706fd3\" },\r\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n        { name: \"SummerSky\", color: \"#34ace0\" },\r\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n        { name: \"Liberty\", color: \"#474787\" },\r\n        { name: \"HotStone\", color: \"#aaa69d\" },\r\n        { name: \"DevilBlue\", color: \"#227093\" },\r\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n        { name: \"ChileanFire\", color: \"#cd6133\" },\r\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n        { name: \"Desert\", color: \"#ccae62\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Indian\",\r\n      id: \"flat-ui-colors-indian\",\r\n      emoji: \"🇮🇳\",\r\n      colors: [\r\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n        { name: \"RichGardenia\", color: \"#F97F51\" },\r\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n        { name: \"Keppel\", color: \"#58B19F\" },\r\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n        { name: \"BlueBell\", color: \"#3B3B98\" },\r\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n        { name: \"OasisStream\", color: \"#9AECDB\" },\r\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n        { name: \"PineGlade\", color: \"#BDC581\" },\r\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors French\",\r\n      id: \"flat-ui-colors-french\",\r\n      emoji: \"🇫🇷\",\r\n      colors: [\r\n        { name: \"FlatFlesh\", color: \"#fad390\" },\r\n        { name: \"MelonMelody\", color: \"#f8c291\" },\r\n        { name: \"Livid\", color: \"#6a89cc\" },\r\n        { name: \"Spray\", color: \"#82ccdd\" },\r\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n        { name: \"MandarinRed\", color: \"#e55039\" },\r\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n        { name: \"Dupain\", color: \"#60a3bc\" },\r\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n        { name: \"Waterfall\", color: \"#38ada9\" },\r\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n        { name: \"JalapenoRed\", color: \"#b71540\" },\r\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n        { name: \"ReefEncounter\", color: \"#079992\" }\r\n      ]\r\n    }\r\n  ];","import React from 'react';\nimport './App.css';\nimport Palette from './components/Palette/Palette';\nimport seedColorPalettes from './seedColorPalettes'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Palette {...seedColorPalettes[0]}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}